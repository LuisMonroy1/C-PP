// TicTacToe_Game.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <string>
#include <stdlib.h>
using namespace std;


char board[3][3] = { {'1','2','3'},{'4','5','6'},{'7','8','9'} }; //array elements
int choice;
int row, column;
char turn = 'X';
bool draw = false;
void playerdata()
{
    string player1, player2;
    cout << "Enter name of player 1: ";
    cin >> player1;
    cout << "Enter name of player 2: ";
    cin >> player2;
    cout << player1 << " Uses X to play the game and ";
    cout << player2 << " uses O to play the game";
}
void placechar() //function array to place X or O 
{
    cout << "\n     |     |     ";
    cout << "\n  " << board[0][0] << "  |  " << board[0][1] <<"  |  " << board[0][2];
    cout << "\n_____|_____|_____";
    cout << "\n     |     |     ";
    cout << "\n  " << board[1][0] << "  |  " << board[1][1] << "  |  " << board[1][2];
    cout << "\n_____|_____|_____";
    cout << "\n     |     |     ";
    cout << "\n  " << board[2][0] << "  |  " << board[2][1] << "  |  " << board[2][2];
    cout << "\n     |     |     \n";
}
void gamelogic()
{
    if (turn == 'X') {
        cout << "Player - 1 [X] turn : ";
    }
    else if (turn == 'O') {
        cout << "Player - 2 [O] turn : ";
    }

    cout << "\nPick a location to place the Character:";
    cin >> choice;

    switch (choice) {
    case 1: row = 0; column = 0; break;
    case 2: row = 0; column = 1; break;
    case 3: row = 0; column = 2; break;
    case 4: row = 1; column = 0; break;
    case 5: row = 1; column = 1; break;
    case 6: row = 1; column = 2; break;
    case 7: row = 2; column = 0; break;
    case 8: row = 2; column = 1; break;
    case 9: row = 2; column = 2; break;
    default:
        cout << "Invalid Move";
    }

        if (turn == 'X' && board[row][column] != 'X' && board[row][column] != 'O') {
            //updating the position for 'X' symbol if
            //it is not already occupied
            board[row][column] = 'X';
            turn = 'O';
        }
        else if (turn == 'O' && board[row][column] != 'X' && board[row][column] != 'O') {
            //updating the position for 'O' symbol if
            //it is not already occupied
            board[row][column] = 'O';
            turn = 'X';
        }
        else {
            //if input position already filled
            cout << "Box already filled!n Please choose another!!nn";
            gamelogic();
        }
}
bool gameover() 
{
    //checking the win for Simple Rows and Simple Column
    for (int i = 0; i < 3; i++)
        if (board[i][0] == board[i][1] && board[i][0] == board[i][2] || board[0][i] == board[1][i] && board[0][i] == board[2][i])
            return false;

    //checking the win for both diagonal

    if (board[0][0] == board[1][1] && board[0][0] == board[2][2] || board[0][2] == board[1][1] && board[0][2] == board[2][0])
        return false;

    //Checking the game is in continue mode or not
    for (int i = 0; i < 3; i++)
        for (int j = 0; j < 3; j++)
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return true;

    //Checking the if game already draw
    draw = true;
    return false;
}

int main()
{
    playerdata();
    while (gameover()) 
    {
        placechar();
        gamelogic();
        gameover();
    }
    if (turn == 'X' && draw == false) 
    {
        cout << "Congratulations Player 2 with 'O' has won the game\n";
    }
    else if (turn == 'O' && draw == false) 
    {
        cout << "Congratulations Player 1 with 'X' has won the game\n";
    }
    else
        cout << "GAME DRAW!!!\n";
}
